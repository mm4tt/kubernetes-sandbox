group 'com.mmat'
version '1.0'

apply plugin: 'java'
apply plugin: 'com.google.protobuf'

buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.1'
  }
}

repositories {
  mavenCentral()
  maven {
    url "https://dl.bintray.com/crate/crate/"
  }
  mavenLocal()
}

def grpcVersion = '1.1.2'

protobuf {
  // Configure the protoc executable
  protoc {
    // Download from repositories
    artifact = 'com.google.protobuf:protoc:3.0.0'
  }
  plugins {
    grpc {
      artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
    }
  }
  generateProtoTasks {
    all()*.plugins {
      grpc {
        // TODO(mmat): Check if this is needed.
        option 'enable_deprecated=false'
      }
    }
  }
}

dependencies {
  compile 'com.google.protobuf:protobuf-java:3.0.0'
  compile group: 'io.grpc', name: 'grpc-netty', version: "${grpcVersion}"
  compile "io.grpc:grpc-protobuf:${grpcVersion}"
  compile "io.grpc:grpc-stub:${grpcVersion}"
  compile group: 'com.google.inject', name: 'guice', version: '3.0'
  compile group: 'io.crate', name: 'crate-jdbc', version: '2.1.6'
  compile group: 'org.eclipse.jetty', name: 'jetty-server', version: '9.4.0.RC3'
  compile group: 'org.eclipse.jetty', name: 'jetty-servlet', version: '9.4.0.RC3'
  compile group: 'org.slf4j', name: 'jul-to-slf4j', version: '1.7.24'
  compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.24'

  testCompile group: 'junit', name: 'junit', version: '4.11'
}

apply plugin: 'idea'
idea {
  module {
    sourceDirs += file("${protobuf.generatedFilesBaseDir}/main/java");
    sourceDirs += file("${protobuf.generatedFilesBaseDir}/main/grpc");
  }
}

task frontendJar(type: Jar) {
  manifest {
    attributes  'Main-Class': 'com.mmat.frontend.FrontendApp'
  }
  baseName = "Frontend"
  from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
  with jar
}

task backendJar(type: Jar) {
  manifest {
    attributes  'Main-Class': 'com.mmat.server.ServerApp'
  }
  baseName = "Backend"
  from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
  with jar
}